<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- appCtx.xml 
		1.before
		2.around (대상 메소드 수행 전)
		3.대상 메소드
		4.after-returning
		5.after(finally)
		6.around (대상 메소드 수행 후)
	-->
	
	<bean class = "ex05.aop.CalImpl" id = "calc"/>
	<bean class = "ex05.aop.LogPrintBeforeAdvice" id = "logPrintBeforeAdvice"/>
	<bean class = "ex05.aop.LogPrintAfterAdvice" id = "logPrintAfterAdvice"></bean>
	<bean class = "ex05.aop.LogPrintArroundAdvice" id = "logPrintArroundAdvice"></bean>
	<bean class = "ex05.aop.LogPrintThrowingAdvice" id = "logPrintThrowingAdvice"></bean>
	
	<bean class = "org.springframework.aop.framework.ProxyFactoryBean" id = "proxy">
		<property name="proxyInterfaces">
			<list><value>ex05.aop.ICalc</value></list> <!-- 인터페이스 -->
		</property>
		
		<property name="target"><ref bean = "calc"/></property>
		
		<property name="interceptorNames"> <!-- 보조관심사 -->
			<list>
				<!-- 여러개의 보조 관심사 적용 가능함.
				logPrintBeforeAdvice, logPrintAfterAdvice,.....
				동시에적용가능 -->
				<!-- <value>logPrintBeforeAdvice</value> -->
				<!-- <value>logPrintAfterAdvice</value> --> <!-- 핸들러 ID값 -->
				<!-- <value>logPrintArroundAdvice</value> -->
				<value>logPrintThrowingAdvice</value>
			</list>
		</property>
	</bean>
	
</beans>
